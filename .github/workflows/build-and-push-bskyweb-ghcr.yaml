name: build-and-push-bskyweb-ghcr
on:
  push:
    branches:
      - main
      - jake/bskyweb-additions
env:
  REGISTRY: ghcr.io
  USERNAME: ${{ github.actor }}
  PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-platforms:
    # if: github.repository == 'bluesky-social/social-app'
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Sanitize platform name
        id: platform
        run: |
          platform=${{ matrix.platform }}
          echo "cache=${platform//\//-}" >> $GITHUB_OUTPUT

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=bskyweb-,suffix=,format=long
            type=raw,value=bskyweb-{{date 'YYYY-MM-DDTHH-mm-ssZ' tz='UTC'}}
            bskyweb-latest

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=bskyweb-${{ steps.platform.outputs.cache }}
          cache-to: type=gha,mode=max,scope=bskyweb-${{ steps.platform.outputs.cache }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ strategy.job-index }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-manifests:
    runs-on: ubuntu-latest
    needs: build-platforms
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          merge-multiple: true
          path: /tmp/digests

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=bskyweb-,suffix=,format=long
            type=raw,value=bskyweb-{{date 'YYYY-MM-DDTHH-mm-ssZ' tz='UTC'}}
            bskyweb-latest

      - name: Create manifest list and push
        id: merge
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect image and get digest
        id: inspect
        run: |
          digest=$(docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:bskyweb-latest | grep "Digest:" | head -1 | awk '{print $2}')
          echo "digest=$digest" >> $GITHUB_OUTPUT

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.inspect.outputs.digest }}
          push-to-registry: true

      - name: Checkout repository for tagging
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag repository with datetime
        run: |
          DATETIME_TAG=$(date -u +"%Y-%m-%dT%H-%M-%SZ")
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "bskyweb-$DATETIME_TAG" -m "Release bskyweb-$DATETIME_TAG"
          git push origin "bskyweb-$DATETIME_TAG"
